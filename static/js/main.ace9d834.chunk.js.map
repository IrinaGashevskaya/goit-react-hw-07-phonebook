{"version":3,"sources":["redux/actions.js","redux/reducer.js","redux/store.js","redux/operation.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["changeFilter","createAction","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","contacts","createReducer","_","payload","state","filter","id","loading","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","rootReducer","devTools","process","axios","defaults","baseURL","getContacts","getFilter","getFilteredContacts","createSelector","contact","name","toLowerCase","includes","getIsAdded","map","ContactForm","useState","setName","number","setNumber","isAdded","useSelector","dispatch","useDispatch","className","onSubmit","e","preventDefault","alert","post","then","data","catch","error","addContact","type","value","pattern","title","required","onChange","target","ContactList","filterContacts","onClick","delete","deleteContacts","Filter","htmlFor","connect","useEffect","localStorage","setItem","JSON","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ace9d834.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  \"contacts/fetchContactsRequest\"\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  \"contacts/fetchContactsSuccess\"\r\n);\r\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n\r\nexport const addContactsRequest = createAction(\"contacts/addContactsRequest\");\r\nexport const addContactsSuccess = createAction(\"contacts/addContactsSuccess\");\r\nexport const addContactsError = createAction(\"contacts/addContactsError\");\r\n\r\nexport const deleteContactsRequest = createAction(\r\n  \"contacts/deleteContactsRequest\"\r\n);\r\nexport const deleteContactsSuccess = createAction(\r\n  \"contacts/deleteContactsSuccess\"\r\n);\r\nexport const deleteContactsError = createAction(\"contacts/deleteContactsError\");\r\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  changeFilter,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n} from \"./actions\";\r\n\r\nconst contacts = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactsSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactsSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactsRequest]: () => true,\r\n  [addContactsSuccess]: () => false,\r\n  [addContactsError]: () => false,\r\n\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n\r\n  [deleteContactsRequest]: () => true,\r\n  [deleteContactsSuccess]: () => false,\r\n  [deleteContactsError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./reducer\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport {\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from \"./actions\";\r\n\r\naxios.defaults.baseURL = `http://localhost:3000`;\r\n\r\nexport const fetchContacts = () => (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get(`/contacts`)\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch((error) => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nexport const addContact = (name, number) => (dispatch) => {\r\n  const contact = { name, number };\r\n\r\n  dispatch(addContactsRequest());\r\n  axios\r\n    .post(`/contacts`, contact)\r\n    .then(({ data }) => dispatch(addContactsSuccess(data)))\r\n    .catch((error) => dispatch(addContactsError(error)));\r\n};\r\n\r\nexport const deleteContacts = (id) => (dispatch) => {\r\n  dispatch(deleteContactsRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactsSuccess(id)))\r\n    .catch((error) => dispatch(deleteContactsError(error)));\r\n};\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (state) => state.contacts;\r\n\r\nexport const getFilter = (state) => state.filter;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    )\r\n);\r\n\r\nexport const getIsAdded = createSelector([getContacts], (contacts) => {\r\n  const isAdded = (name) =>\r\n    contacts.map((contact) => contact.name).includes(name);\r\n  return isAdded;\r\n});\r\n","import React from \"react\";\r\nimport \"./ContactForm.css\";\r\nimport { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addContact } from \"../../redux/operation\";\r\nimport { getIsAdded } from \"../../redux/selectors\";\r\nconst ContactForm = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const isAdded = useSelector(getIsAdded);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isAdded(name)) {\r\n      return alert(`${name} is already in contacts`);\r\n    } else {\r\n      dispatch(addContact(name, number));\r\n    }\r\n\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n      <label className=\"label-form\">\r\n        Name\r\n        <input\r\n          className=\"input\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </label>\r\n      <label className=\"label-form\">\r\n        Number\r\n        <input\r\n          className=\"input\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={(e) => setNumber(e.target.value)}\r\n        />\r\n      </label>\r\n      <button className=\"button-form\" type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport \"./ContactList.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteContacts } from \"../../redux/operation\";\r\nimport { getFilteredContacts } from \"../../redux/selectors\";\r\n\r\nexport default function ContactList() {\r\n  const filterContacts = useSelector(getFilteredContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ul className=\"list\">\r\n      {filterContacts.map(({ id, name, number }) => (\r\n        <li className=\"item\" key={id}>\r\n          <p className=\"name\">\r\n            {name}: {number}\r\n          </p>\r\n          {\r\n            <button\r\n              className=\"button\"\r\n              data-key={id}\r\n              type=\"button\"\r\n              name=\"delete\"\r\n              onClick={() => dispatch(deleteContacts(id))}\r\n            >\r\n              Delete\r\n            </button>\r\n          }\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { changeFilter } from \"../../redux/actions\";\r\nimport { getFilter } from \"../../redux/selectors\";\r\nimport \"./Filter.css\";\r\nexport default function Filter() {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className=\"label\" name=\"filter\" htmlFor=\"filter\" value={filter}>\r\n      Find contacts by name\r\n      <input\r\n        className=\"input-filter\"\r\n        value={filter}\r\n        type=\"text\"\r\n        id=\"filter\"\r\n        onChange={(e) => dispatch(changeFilter(e.target.value))}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport \"./App.css\";\nimport \"modern-normalize/modern-normalize.css\";\nfunction App({ contacts }) {\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div>\n      <h1 className=\"header\">Phonebook</h1>\n      <ContactForm />\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts,\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}